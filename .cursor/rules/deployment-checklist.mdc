# üöÄ PRE-DEPLOYMENT VALIDATION CHECKLIST

## ‚ö†Ô∏è **MANDATORY: Complete ALL Items Before Deployment**

### **üîí Code Validation (REQUIRED):**
- [ ] **NO LINTER ERRORS** - Run `npm run lint` and fix ALL issues
- [ ] **TypeScript Compilation** - Run `npm run build` successfully
- [ ] **Import Paths** - All imports use correct relative paths
- [ ] **Type Safety** - No `any` types without justification
- [ ] **Error Handling** - All async operations have proper error handling

### **üß™ Testing Validation (REQUIRED):**
- [ ] **Local Development** - `npm run dev` runs without errors
- [ ] **API Endpoints** - Test all modified endpoints with real data
- [ ] **Database Operations** - Verify all database queries work correctly
- [ ] **Error Scenarios** - Test error handling and edge cases
- [ ] **Console Clean** - No errors in browser console or terminal

### **‚ö° Performance Validation (REQUIRED):**
- [ ] **Response Times** - All APIs respond within timeout limits
- [ ] **Database Performance** - No slow queries (>1000ms)
- [ ] **Memory Usage** - No memory leaks or excessive resource usage
- [ ] **Bundle Size** - No unnecessary large dependencies added
- [ ] **Caching Strategy** - Appropriate cache headers for each endpoint

### **üîê Security Validation (REQUIRED):**
- [ ] **Input Validation** - All user inputs properly sanitized
- [ ] **Database Security** - No raw SQL, use Prisma safely
- [ ] **CORS Configuration** - Public APIs have proper CORS headers
- [ ] **Authentication** - Protected routes require proper auth
- [ ] **Environment Variables** - No sensitive data in code

### **üåê Environment Validation (REQUIRED):**
- [ ] **Environment Variables** - All required vars are set
- [ ] **Database Connection** - Production database accessible
- [ ] **External APIs** - All API keys and endpoints valid
- [ ] **Build Process** - Production build succeeds
- [ ] **Dependencies** - All packages are compatible

## üö® **EMERGENCY ROLLBACK PLAN:**

### **If Issues Occur:**
1. **Immediate**: Revert to last working commit
2. **Investigate**: Check logs and error messages
3. **Fix Locally**: Apply corrections and test thoroughly
4. **Validate**: Complete full validation checklist again
5. **Redeploy**: Only after ALL items pass

## üìä **COMMIT MESSAGE FORMAT:**
```
type(scope): brief description

Examples:
fix(api): add timeout protection to prevent H27 errors
feat(analytics): implement new tracking system
refactor(db): optimize database queries for better performance
```

## ‚ö° **QUICK VALIDATION COMMANDS:**
```bash
# Check for TypeScript errors
npm run build

# Check for linting issues  
npm run lint

# Test local development
npm run dev

# Check database connection
npm run prisma:studio

# Validate API endpoints
curl -X GET "http://localhost:3000/api/health"
```

## üéØ **PRIORITY LEVELS:**

### **üî¥ CRITICAL (Must Fix Before Deployment):**
- Linter errors
- TypeScript compilation errors
- Database connection failures
- Security vulnerabilities

### **üü° HIGH (Fix Before Production):**
- Performance issues
- Error handling gaps
- Missing validation
- API response timeouts

### **üü¢ MEDIUM (Fix in Next Iteration):**
- Code style improvements
- Documentation updates
- Minor optimizations
- UI/UX enhancements

---

## ‚ö†Ô∏è **FINAL REMINDER:**

**NEVER SKIP VALIDATION STEPS**
**"It works on my machine" is NOT acceptable for production**
**Always validate, test, and confirm before deploying**

**This checklist is MANDATORY for every deployment.**
description:
globs:
alwaysApply: false
---
